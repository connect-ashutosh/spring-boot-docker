name: CI/CD Pipeline

on:
  push:
    branches:
      - staging  # Trigger on pushes to the staging branch
  pull_request:
    branches:
      - staging  # Trigger on PRs to the staging branch

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Run Trivy vulnerability scanner on the code repository
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-repo-results.sarif'
          severity: 'CRITICAL'

      # Build Docker image from Dockerfile
      - name: Build Docker image
        run: |
          docker build \
            -t ${{ secrets.DOCKER_REGISTRY }}/my-app:${{ github.sha }} \
            -t ${{ secrets.DOCKER_REGISTRY }}/my-app:latest \
            .

      # Run Trivy vulnerability scanner on Docker image
      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ secrets.DOCKER_REGISTRY }}/my-app:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-image-results.sarif'

      # Combine SARIF files
      - name: Combine SARIF files
        run: |
          jq -s 'add' trivy-repo-results.sarif trivy-image-results.sarif > combined-results.sarif

      # Upload combined SARIF file to GitHub Security tab
      - name: Upload combined SARIF file to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'combined-results.sarif'

      # Log in to DigitalOcean Container Registry
      - name: Log in to DigitalOcean Container Registry
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY }} -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Push Docker image to DigitalOcean
      - name: Push Docker image to DigitalOcean
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY }}/my-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_REGISTRY }}/my-app:latest

      
